array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '41',
  'answer_text' => 'def whileTest(n):
	g=\'\'
	while(n>0):
		g+=\'a\'
		n-=1
	return g',
)
array (
  'question_fxn_name' => 'whileTest(n)',
  'question_inputs' => '(n=4)="aaaa"||(n=5)="aaaaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '47',
  'answer_text' => 'def whileTest2(n):
	return(n*\'a\')',
)
array (
  'question_fxn_name' => 'whileTest2(n)',
  'question_inputs' => '(n=5)="aaaaa"||(n=3)="aaa"',
  'question_max_score' => '50',
  'question_constraint' => 'while',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'factorial(n):
	if n <= 22:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n)
	if n <= 1
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
NULL
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n,k):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial(n,k):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial n:
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => 'def not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => ' not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass
 not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)

def fib(n):
	pass
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f=d,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
 fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f,gg):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,f):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n,u):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def not_factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * not_factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n,m):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 2:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n):
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n)
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n)
	pass

def factorial (n):
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
array (
  'question_id' => '51',
  'answer_text' => '
def fib(n)
	pass

def factorial (n)
	if n <= 1:
		return 1
	return n * factorial(n-1)
',
)
array (
  'question_fxn_name' => 'factorial(n)',
  'question_inputs' => '(n=1)=1||(n=2)=2||(n=3)=6||(n=5)=120',
  'question_max_score' => '100',
  'question_constraint' => 'recursion',
)
